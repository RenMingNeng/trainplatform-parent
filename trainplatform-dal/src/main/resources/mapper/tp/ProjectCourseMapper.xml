<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bossien.train.dao.tp.ProjectCourseMapper">

    <resultMap id="projectCourseMap" type="com.bossien.train.domain.ProjectCourse">
        <id column="id" property="id"></id>
        <result column="project_id" property="projectId"></result>
        <result column="course_id" property="courseId"></result>
        <result column="course_no" property="courseNo"></result>
        <result column="course_name" property="courseName"></result>
        <result column="role_id" property="roleId"></result>
        <result column="role_name" property="roleName"></result>
        <result column="select_count" property="selectCount"></result>
        <result column="class_hour" property="classHour"></result>
        <result column="question_count" property="questionCount"></result>
        <result column="requirement" property="requirement"></result>
        <result column="create_time" property="createTime"></result>
        <result column="create_user" property="createUser"></result>
        <result column="oper_time" property="operTime"></result>
        <result column="oper_user" property="operUser"></result>
    </resultMap>

    <update id="update" parameterType="java.util.Map">
        UPDATE project_course SET
        <trim prefix="" prefixOverrides=",">
            <if test="courseNo !=null and courseNo !=''">,course_no = #{courseNo}</if>
            <if test="courseName !=null and courseName !=''">,course_name = #{courseName}</if>
            <if test="roleName !=null and roleName !=''">,role_name = #{roleName}</if>
            <if test="selectCount !=null and selectCount !=''">,select_count = #{selectCount}</if>
            <if test="classHour !=null and classHour !=''"> ,class_hour = #{classHour}</if>
            <if test="questionCount !=null and questionCount != ''">,question_count = #{questionCount}</if>
            <if test="requirement !=null and requirement != ''">,requirement = #{requirement}</if>
            <if test="operUser !=null and operUser !=''"> ,oper_user = #{operUser}</if>
            <if test="operTime !=null and operTime !=''"> ,oper_time = #{operTime}</if>
        </trim>
        WHERE project_id = #{projectId} and id=#{id}
    </update>

    <update id="updateQuestionCount" parameterType="java.util.Map">
        UPDATE project_course SET question_count = #{questionCount}
        WHERE course_id = #{courseId} AND project_id = #{projectId}
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE project_course SET question_count = #{item.questionCount}
            WHERE course_id = #{item.courseId} AND project_id = #{item.projectId}
        </foreach>
    </update>

    <sql id="baseColumn">
      id, project_id, course_id,course_no, course_name,
      role_id, role_name, select_count, class_hour, question_count,
       requirement,oper_user, oper_time
    </sql>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into project_course (
        id, project_id, course_id, course_no, course_name, role_id,
        role_name, question_count, class_hour, requirement, select_count,
        create_user,create_time, oper_user, oper_time
        )
        values
        <if test="list !=null and list.size >0">
            <foreach item="item" index="index" collection="list" separator=",">
                (
                #{item.id}, #{item.projectId}, #{item.courseId}, #{item.courseNo}, #{item.courseName}, #{item.roleId},
                #{item.roleName}, #{item.questionCount}, #{item.classHour}, #{item.requirement}, #{item.selectCount},
                #{item.createUser}, #{item.createTime}, #{item.operUser},  #{item.operTime}
                )
            </foreach>
        </if>
    </insert>

    <!-- 根据属性查询项目课程 -->
    <select id="selectList" parameterType="java.util.Map" resultType="java.util.Map">
        select
          <include refid="baseColumn"/>
        from
          project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId != null and projectId != ''">
                AND	project_id = #{projectId}
            </if>
            <if test="courseName != null and courseName != ''">
                AND	course_name LIKE #{courseName}
            </if>
            <if test="roleId != null and roleId != ''">
                AND	role_id = #{roleId}
            </if>
            group by course_id
            order by course_id
            <include refid="CommonMapper.mysqlPage" />
        </trim>
    </select>

    <!-- 根据属性查询项目课程数量 -->
    <select id="selectCourseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId !=null and projectId !=''">
                AND project_id=#{projectId}
            </if>
            <if test="courseName != null and courseName != ''">
                AND	course_name LIKE #{courseName}
            </if>
            <if test="roleId != null and roleId != ''">
                AND	role_id = #{roleId}
            </if>
            <if test="courseId != null and courseId != ''">
                AND	course_id = #{courseId}
            </if>
        </trim>
    </select>
    <!-- 根据属性查询项目课程数量 -->
    <select id="courseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        COUNT(course_id)
        FROM
        project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            course_id = #{courseId}
        </trim>
    </select>


    <!-- 根据属性查询项目课程数量 -->
    <select id="selectCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM
        (SELECT
        project_id,
        course_id,
        course_name,
        role_id
        FROM
        project_course
        WHERE project_id = #{projectId} GROUP BY course_id) t
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="courseName != null and courseName != ''">
                AND	t.course_name LIKE #{courseName}
            </if>
            <if test="roleId != null and roleId != ''">
                AND	t.role_id = #{roleId}
            </if>
        </trim>
    </select>

    <!-- 根据projectId和roleId查询相关课程-->
    <select id="selectByProjectIdAndRoleId" parameterType="java.util.Map" resultMap="projectCourseMap">
       select
        course_id,role_id,role_name,requirement,select_count
        FROM project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId !=null and projectId !=''">
                AND project_id=#{projectId}
            </if>
            <if test="roleId !=null and roleId !=''">
                AND role_id=#{roleId}
            </if>
            <if test="project_id !=null and project_id !=''">
                AND project_id=#{project_id}
            </if>
            <if test="role_id !=null and role_id !=''">
                AND role_id=#{role_id}
            </if>
        </trim>
    </select>

    <!-- 根据projectId和roleId查询项目角色总学时-->
    <select id="selectNecessaryHour" parameterType="java.util.Map" resultType="java.lang.Integer">
        select  IFNULL(sum(requirement),0) necessaryHour FROM project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId !=null and projectId !=''">
                AND project_id=#{projectId}
            </if>
            <if test="roleId !=null and roleId !=''">
                AND role_id=#{roleId}
            </if>
        </trim>
    </select>

    <!-- 根据projectId和roleId删除项目课程-->
    <delete id="deleteBatch" parameterType="java.util.Map">
        DELETE FROM project_course WHERE   role_id = #{roleId}
        <if test="projectId!=null and projectId!='' ">
            and project_id = #{projectId}
        </if>
        <if test="ids!=null and ids.size>0 ">
            AND id IN
            <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="courseIds!=null and courseIds.size>0 ">
            AND course_id IN
            <foreach item="id" index="index" collection="courseIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </delete>

    <!-- 查询项目课程ids集合 -->
    <select id="selectCourseIds" parameterType="java.util.Map" resultType="java.lang.String">
        select course_id AS courseId from project_course WHERE project_id = #{projectId}
        <if test="roleId != null and roleId != ''">
            AND role_id = #{roleId}
        </if>
        group by course_id
    </select>

    <!-- 查询项目课程信息集合 -->
    <select id="selectProjectCourseInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
          project_id AS projectId,
          course_id AS courseId,
          course_name AS courseName,
          class_hour AS  classHour,
          requirement AS requirementStudytime,
          question_count AS totalQuestion,
          create_user AS createUser,
          oper_user AS operUser
       FROM
         project_course
       WHERE
         project_id = #{projectId}
       AND
         role_id = #{roleId}
        <if test="courseIds !=null and courseIds.size>0">
            AND
            course_id IN
            <foreach item="id" index="index" collection="courseIds" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="courseId !=null and courseId != ''">
            AND course_id = #{courseId}
        </if>

    </select>

    <!-- 根据项目Id和角色Id查询项目课程总学时和总题量 -->
    <select id="selectProjectCourseMap" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        IFNULL(SUM(requirement),0) AS requirementStudytime,
        IFNULL(SUM(question_count),0) AS totalQuestion
        FROM
        project_course
        WHERE
        project_id = #{projectId}
        AND
        role_id = #{roleId}
    </select>

      <!--修改未发布和未开始项目时,确认角色减少时是否有相关课程的存在-->
    <select id="selectIds" parameterType="java.util.Map" resultType="java.lang.String">
        select id from project_course where
        project_id= #{projectId}
        and role_id not in
        <foreach item="roleId" index="index" collection="roleIds" open="(" separator="," close=")">
             #{roleId}
        </foreach>
    </select>
    <!--根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        DELETE FROM  project_course where id=#{id}
    </delete>

    <delete id="deleteBatchByCourseIds" parameterType="java.util.Map">
        DELETE FROM project_course WHERE project_id = #{project_id} and course_id in
        <foreach collection="courseIds" index="index" item="courseId" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>

    <!--根据projectId删除-->
    <delete id="deleteProjectId" parameterType="java.util.Map">
        DELETE FROM  project_course where project_id=#{projectId}
        <if test="roleId != null and roleId !=''">
            and role_id != #{roleId}
        </if>
        <if test="roleIds != null and roleIds.size>0">
            and role_id in
            <foreach collection="roleIds" index="index" item="roleId" open="(" separator="," close=")">
                #{roleId}
            </foreach>
        </if>
    </delete>

    <delete id="deleteProjectCourse" parameterType="java.util.Map">
        DELETE FROM  project_course where project_id=#{projectId} AND course_id IN
        <foreach collection="courseIds" item="courseId" index="index" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>

    <!-- 高级设置中查询项目课程信息 -->
    <select id="selectProjectCourse" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
           id ,
          project_id AS projectId,
          course_id AS courseId,
          course_no AS courseNo,
          course_name AS courseName,
          question_count AS questionCount,
          class_hour AS classHour
        FROM
          project_course
        WHERE project_id = #{projectId}
        GROUP BY course_id
        ORDER BY course_no
        <include refid="CommonMapper.mysqlPage" />
    </select>
    <!--获取每页的课程id集合-->
    <select id="selectProjectCourseIds" parameterType="java.util.Map" resultType="java.lang.String">
       SELECT
        course_id
        FROM
        project_course
        WHERE project_id = #{projectId}
        GROUP BY course_id
        ORDER BY create_time DESC
       limit #{startNum},#{endNum}
    </select>

    <!--获取项目中课程id集合-->
    <select id="selectCourseIdList" parameterType="java.util.Map" resultType="java.lang.String">
        SELECT
        course_id
        FROM
        project_course
        WHERE project_id = #{projectId}
        GROUP BY course_id
    </select>


    <select id="selectProjectCourseCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
         COUNT(1)
        FROM
         (SELECT
          course_id AS courseId
          FROM
          project_course
        WHERE project_id = #{projectId}
        GROUP BY course_id) pc
    </select>



    <!-- 高级设置中查询项目课程信息 -->
    <select id="selectProjectRoleAndCourse" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        role_id AS roleId,
        requirement,
        select_count AS selectCount
        FROM
        project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId != null and projectId != ''">
                AND	project_id = #{projectId}
            </if>
            <if test="courseId != null and courseId != ''">
                AND	course_id = #{courseId}
            </if>
        </trim>
    </select>

    <!-- 根据项目Id获取角色Id集合 -->
    <select id="selectRoleIds" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT
        role_id AS roleId
        FROM
        project_course
        WHERE project_id = #{projectId}
        group by role_id
    </select>
     <!--根据projectId查询课程集合-->
    <select id="selectProjectCourses" parameterType="java.util.Map" resultMap="projectCourseMap">
        select
        <include refid="baseColumn"/>
        from
        project_course
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="projectId != null and projectId != ''">
                AND	project_id = #{projectId}
            </if>
            <if test="roleId != null and roleId !=''">
                and role_id != #{roleId}
            </if>
        </trim>

    </select>

    <!-- 根据项目Id和角色Id查询项目课程总学时和总题量 -->
    <select id="selectTotalQuestionByProjectId"  resultType="java.util.Map">
        SELECT
        IFNULL(SUM(question_count),0) AS totalQuestion,
        role_id,project_id
        FROM
        project_course
        WHERE
        project_id = #{projectId}
        GROUP BY role_id
    </select>
</mapper>