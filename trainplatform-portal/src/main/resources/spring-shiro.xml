<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="authenticator" ref="authenticator"/>
        <!-- 可以配置多个Realm，其实会把realms属性赋值给ModularRealmAuthenticator的realms属性 -->
        <property name="realms">
            <list>
                <ref bean="ssoRealm" />
                <ref bean="userRealm" />
                <ref bean="superRealm"/>
            </list>
        </property>
        <property name="rememberMeManager" ref="rememberMeManager"/>
        <!--可选项 默认使用ServletContainerSessionManager，直接使用容器的HttpSession，可以通过配置sessionManager，使用DefaultWebSessionManager来替代-->
        <property name="sessionManager" ref="sessionManager"/>
        <!--可选项 最好使用;SessionDao 中 doReadSession 读取过于频繁了-->
        <property name="cacheManager" ref="shiroCacheManager"/>
    </bean>

    <!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
    <bean id="authenticator" class="com.bossien.train.shiro.CustomizedModularRealmAuthenticator">
        <!-- 配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息 -->
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
        </property>
    </bean>

    <!-- sso登录认证器 描述：开启sso统一登录 -->
    <bean id="ssoRealm" class="com.bossien.train.shiro.SsoRealm">
        <property name="authenticationTokenClass" value="com.bossien.train.shiro.CustomizedToken"/>
    </bean>

    <!-- 一般用户认证器 描述：学员、管理员 -->
    <bean id="userRealm" class="com.bossien.train.shiro.UserRealm">
        <property name="authenticationTokenClass" value="com.bossien.train.shiro.CustomizedToken"/>
    </bean>

    <!-- 超管用户认证器 描述：超级管理员 -->
    <bean id="superRealm" class="com.bossien.train.shiro.SuperRealm">
        <property name="authenticationTokenClass" value="com.bossien.train.shiro.CustomizedToken"/>
    </bean>

    <!--cookie-->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="2592000"/><!-- “记住我”有效期30天 -->
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位）-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('5AvVhmFLUs0KTA3Kprsdag==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!--session管理器-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000"/>
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true-->
        <property name="deleteInvalidSessions" value="false"/>
        <!-- 是否开启会话验证器任务 默认true -->
        <property name="sessionValidationSchedulerEnabled" value="false"/>
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionDAO" ref="redisSessionDAO"/>
        <!-- 默认JSESSIONID，同tomcat/jetty在cookie中缓存标识相同，修改用于防止访问404页面时，容器生成的标识把shiro的覆盖掉 -->
        <property name="sessionIdCookie">
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg name="name" value="SHRIOSESSIONID"/>
            </bean>
        </property>
    </bean>

    <bean id="shiroCacheManager" class="com.bossien.framework.cache.RedisCacheManager">
        <property name="redisManager" ref="shiroRedisManager"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor" p:securityManager-ref="securityManager"/>

    <bean id="redisSessionDAO" class="com.bossien.framework.cache.RedisSessionDAO">
        <property name="redisManager" ref="shiroRedisManager"/>
    </bean>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/"/>
        <property name="successUrl" value="/redirect"/>
        <property name="unauthorizedUrl" value="/unauth"/>
        <property name="filters">
            <map>
                <entry key="authc">
                    <bean class="com.bossien.train.shiro.ShiroAccess"/>
                </entry>
                <entry key="logout" value-ref="logoutFilter"></entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /login = anon
                /logout = logout
                /redirect = anon
                /keeplive = anon
                /sso/** = anon
                /sign** = anon
                /test/** = anon
                /druid/** = anon
                /static/** = anon
                /console/** = anon
                /article/** = anon
                /attachment/** = anon
                /super/** = roles[super_admin]
                /admin/** = roles[company_admin]
                /student/** = roles[company_user]
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 退出过滤器 -->
    <bean id="logoutFilter" class="com.bossien.train.filter.LogoutFilter">
        <property name="redirectUrl" value="/login"/>
    </bean>

</beans>